- if session[:stream].present?
  - stream = session[:stream].first.symbolize_keys!
  - station = Station.find_by(id: stream[:station_id])
  - if station.present?
    #inner
      .container
        .row
          .col-md-5
            .media
              .align-self-center.mr-3= image_tag station.logo_url, size: '50x50', class: 'border', alt: station.name
              .media-body
                = link_to station.name, station_path(station), remote: true, class: 'text-truncate'
                #playing_now.small.text-truncate= station.country_name
                :javascript
                  $.get("#{playing_now_station_path(station)}")
                  if(typeof playingNow !== 'undefined') { clearInterval(playingNow); }
                  playingNow = setInterval(function(){ $.get("#{playing_now_station_path(station)}") }, 60000);

          .col-md-5
            - if stream.present?
              - if (session[:stream].size == 1) && (stream[:content_type] == 'audio/aacp')
                -# Hack for playing aac file
                %audio{controls: true, src: "#{stream[:url]}"}

              - else
                %audio{controls: true, id: 'player', preload: 'none', 'data-plyr-config': '{ "invertTime": false, "toggleInvert": false }'}

            - else
              .small.text-danger
                .fa.fa-exclamation-triangle
                This station doesn't have a valid stream.

          .col-md-2
            = link_to player_close_stations_path, remote: true, title: 'Close Player' do
              .fa.fa-times.mt-08.pull-right.player_close

    :javascript
      player = new Plyr('#player', {
        controls: ['play-large', 'play', 'current-time', 'mute', 'volume']
      });
      player.source = {
        type: 'audio',
        title: "#{station.name}",
        sources: [{
          src: "#{stream[:url].strip}",
          type: "#{stream[:content_type].try(:strip) || 'audio/mpeg'}",
        }]
      };
      player.play();
